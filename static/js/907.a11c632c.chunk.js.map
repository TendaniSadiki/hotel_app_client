{"version":3,"file":"static/js/907.a11c632c.chunk.js","mappings":"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","sources":["Components/Home/home.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { auth, db } from '../../config/firebase';\r\n\r\nimport {\r\n  addDoc,\r\n  collection,\r\n  getDocs,\r\n  getDoc,\r\n  doc,\r\n  writeBatch,\r\n} from 'firebase/firestore';\r\nimport './home.css';\r\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/pagination';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation, Pagination, Autoplay } from 'swiper';\r\n\r\nimport 'swiper/swiper.min.css';\r\nimport Footer from '../Footer/footer';\r\nimport Loader from '../Loader/Loader';\r\n\r\nSwiperCore.use([Navigation, Pagination, Autoplay]);\r\n\r\nconst Home = () => {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedRoom, setSelectedRoom] = useState(null);\r\n  const [bookingModalOpen, setBookingModalOpen] = useState(false);\r\n  const [checkInDate, setCheckInDate] = useState('');\r\n  const [checkOutDate, setCheckOutDate] = useState('');\r\n  const [roomStatus] = useState('NotApproved');\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [updatedEmail, setUpdatedEmail] = useState('');\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const [paymentModalOpen, setPaymentModalOpen] = useState(false); // New state variable for the payment modal\r\n  const [confirmPriceClicked, setConfirmPriceClicked] = useState(false); // Track if \"Confirm price\" button is clicked\r\n  const swiperRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch rooms data\r\n    const fetchRooms = async () => {\r\n      try {\r\n        const roomCollection = collection(db, 'rooms');\r\n        const roomSnapshot = await getDocs(roomCollection);\r\n        const roomData = roomSnapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setRooms(roomData);\r\n        setIsLoading(false);\r\n        // Create headerCarouselImages collection and push the first images\r\n        const headerCarouselImagesCollection = collection(\r\n          db,\r\n          'headerCarouselImages'\r\n        );\r\n        const batch = writeBatch(db);\r\n\r\n        roomData.forEach((room) => {\r\n          const headerImage = room.images[0];\r\n          const newDocRef = doc(headerCarouselImagesCollection);\r\n          batch.set(newDocRef, { image: headerImage });\r\n        });\r\n\r\n        await batch.commit();\r\n      } catch (error) {\r\n        console.log('Error fetching rooms:', error);\r\n        setError('Error fetching rooms');\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRooms();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch user profile data\r\n    const fetchUserProfile = async () => {\r\n      try {\r\n        if (auth.currentUser) {\r\n          const userDocRef = doc(db, 'users', auth.currentUser.uid);\r\n          const userDocSnap = await getDoc(userDocRef);\r\n          if (userDocSnap.exists()) {\r\n            setUserProfile(userDocSnap.data());\r\n            setUpdatedEmail(userDocSnap.data().email);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log('Error fetching user profile:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserProfile();\r\n  }, []);\r\n\r\n  const openModal = (room) => {\r\n    setSelectedRoom(room);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setSelectedRoom(null);\r\n    setBookingModalOpen(false);\r\n    setCheckInDate(\"\");\r\n    setCheckOutDate(\"\");\r\n    setTotalPrice(0);\r\n    setConfirmPriceClicked(false); // Reset the state of the \"Confirm price\" button\r\n    setError(null);\r\n  };\r\n\r\n  const openBookingModal = () => {\r\n    setBookingModalOpen(true);\r\n  };\r\n\r\n  const handleBooking = () => {\r\n    console.log('Room:', selectedRoom);\r\n    console.log('Check-in Date:', checkInDate);\r\n    console.log('Check-out Date:', checkOutDate);\r\n\r\n    const startDate = new Date(checkInDate);\r\n    const endDate = new Date(checkOutDate);\r\n\r\n    if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\r\n      setError('Please enter valid check-in and check-out dates.');\r\n      return;\r\n    }\r\n\r\n    const timeDiff = endDate.getTime() - startDate.getTime();\r\n    const nights = Math.ceil(timeDiff / (1000 * 3600 * 24));\r\n\r\n    if (nights <= 0) {\r\n      setError('Check-out date should be after check-in date.');\r\n      return;\r\n    }\r\n\r\n    const totalPrice = selectedRoom.price * nights;\r\n    setTotalPrice(totalPrice);\r\n    setConfirmPriceClicked(true); // Set the \"Confirm price\" button clicked\r\n    setError(null);\r\n\r\n    // Rest of the code...\r\n  };\r\n\r\n  const handlePayment = async () => {\r\n    // Handle payment process\r\n  \r\n    // Validate payment details\r\n    const cardNumber = document.getElementById('cardNumber').value;\r\n    const cardName = document.getElementById('cardName').value;\r\n    const expiryDate = document.getElementById('expiryDate').value;\r\n    const cvv = document.getElementById('cvv').value;\r\n  \r\n    if (!cardNumber || !cardName || !expiryDate || !cvv) {\r\n      setError('Please fill in all the payment details.');\r\n      return;\r\n    }\r\n  \r\n    // Save payment information to a new collection\r\n    try {\r\n      // Create a new payment document\r\n      const paymentRef = await addDoc(collection(db, 'payments'), {\r\n        email: userProfile.email,\r\n        room: selectedRoom,\r\n        checkInDate,\r\n        checkOutDate,\r\n        totalPrice,\r\n        cardNumber,\r\n        cardName,\r\n        expiryDate,\r\n        cvv,\r\n        timestamp: new Date().getTime(),\r\n        roomStatus: roomStatus,\r\n        test:[\"1\",\"2\",\"3\"]\r\n      });\r\n  \r\n      // Display success message or perform any further actions\r\n      console.log('Payment successful. Payment ID:', paymentRef.id);\r\n    } catch (error) {\r\n      console.log('Error saving payment:', error);\r\n      setError('Error saving payment');\r\n    }\r\n  };\r\n\r\n  const goToPreviousSlide = () => {\r\n    setCurrentSlide((prevSlide) =>\r\n      prevSlide === 0 ? selectedRoom.images.length - 1 : prevSlide - 1\r\n    );\r\n  };\r\n\r\n  const goToNextSlide = () => {\r\n    setCurrentSlide((prevSlide) =>\r\n      prevSlide === selectedRoom.images.length - 1 ? 0 : prevSlide + 1\r\n    );\r\n  };\r\n\r\n  const goToPrevious = () => {\r\n    setCurrentSlide((prevSlide) =>\r\n      prevSlide === 0 ? roomHeaderImages.length - 1 : prevSlide - 1\r\n    );\r\n  };\r\n\r\n  const goToNext = () => {\r\n    setCurrentSlide((prevSlide) =>\r\n      prevSlide === roomHeaderImages.length - 1 ? 0 : prevSlide + 1\r\n    );\r\n  };\r\n\r\n  const roomHeaderImages = rooms.map((room) => room.images[0]);\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      if (swiperRef.current && swiperRef.current.swiper) {\r\n        swiperRef.current.swiper.slideNext();\r\n      }\r\n    }, 5000);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [currentSlide]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"mainCarousel\">\r\n        <Swiper\r\n          ref={swiperRef}\r\n          slidesPerView={1}\r\n          navigation\r\n          pagination\r\n          autoplay={{ delay: 5000 }}\r\n          onSlideChange={(swiper) => setCurrentSlide(swiper.activeIndex)}\r\n        >\r\n          {roomHeaderImages.map((image, index) => (\r\n            <SwiperSlide key={index}>\r\n              <img\r\n                className={`carousel-image ${\r\n                  index === currentSlide ? 'active' : ''\r\n                }`}\r\n                src={image}\r\n                alt={`Room ${rooms[index].name}`}\r\n              />\r\n            </SwiperSlide>\r\n          ))}\r\n        </Swiper>\r\n        <IoIosArrowBack className=\"arrow left\" onClick={goToPrevious} />\r\n        <IoIosArrowForward className=\"arrow right\" onClick={goToNext} />\r\n      </div>\r\n\r\n      <h2>Rooms</h2>\r\n\r\n      <div className=\"room-container\">\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        rooms.map((room, index) => (\r\n          <div\r\n            className=\"room-card\"\r\n            key={room.id}\r\n            onClick={() => openModal(room)}\r\n          >\r\n            <img\r\n              className=\"room-image\"\r\n              src={roomHeaderImages[index]}\r\n              alt={`Room ${room.name}`}\r\n            />\r\n            <div className=\"room-details\">\r\n              <h3 className=\"room-name\">{room.name}</h3>\r\n              <p className=\"room-type\">{room.type}</p>\r\n            </div>\r\n          </div>\r\n          )\r\n        ))}\r\n      </div>\r\n\r\n      {selectedRoom && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <span className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </span>\r\n            <div className=\"carousel\">\r\n              <IoIosArrowBack\r\n                className=\"arrow left\"\r\n                onClick={goToPreviousSlide}\r\n              />\r\n              <img\r\n                className=\"room-image\"\r\n                src={selectedRoom.images[currentSlide]}\r\n                alt={`Room ${selectedRoom.name}`}\r\n              />\r\n              <IoIosArrowForward\r\n                className=\"arrow right\"\r\n                onClick={goToNextSlide}\r\n              />\r\n            </div>\r\n\r\n            <h2>{selectedRoom.name}</h2>\r\n            <p>Type: {selectedRoom.type}</p>\r\n            <p>Description: {selectedRoom.description}</p>\r\n            <p>Price: R{selectedRoom.price}</p>\r\n            <p>\r\n              Capacity: {selectedRoom.adults} Adults, {selectedRoom.children}{' '}\r\n              Children\r\n            </p>\r\n\r\n            <button onClick={openBookingModal}>Book</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {bookingModalOpen && (\r\n        <div className=\"booking-modal\">\r\n          <div className=\"booking-modal-content\">\r\n            <span className=\"close\" onClick={closeModal}>\r\n              &times;\r\n            </span>\r\n            {error && <p>{error}</p>}\r\n            <h2>Booking Details</h2>\r\n            <label htmlFor=\"checkInDate\">Check-in Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"checkInDate\"\r\n              value={checkInDate}\r\n              onChange={(e) => setCheckInDate(e.target.value)}\r\n            />\r\n            <label htmlFor=\"checkOutDate\">Check-out Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"checkOutDate\"\r\n              value={checkOutDate}\r\n              onChange={(e) => setCheckOutDate(e.target.value)}\r\n            />\r\n            <button onClick={handleBooking}>Confirm price</button>\r\n            <button\r\n              onClick={() => setPaymentModalOpen(true)}\r\n              disabled={!confirmPriceClicked}\r\n            >\r\n              Continue with payment\r\n            </button>\r\n            <p>Total Price: R{totalPrice}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n{paymentModalOpen && (\r\n  <div className=\"payment-modal\">\r\n    <div className=\"payment-modal-content card-form\">\r\n      <span\r\n        className=\"close\"\r\n        onClick={() => {\r\n          setPaymentModalOpen(false);\r\n          setConfirmPriceClicked(false); // Reset the state of the \"Confirm price\" button\r\n          setError(null);\r\n        }}\r\n      >\r\n        &times;\r\n      </span>\r\n      <h2>Payment Details</h2>\r\n      {error && <p>{error}</p>}\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"cardNumber\">Card Number:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"cardNumber\"\r\n            pattern=\"[0-9]{13,19}\"\r\n            maxLength=\"19\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"cardName\">Cardholder Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"cardName\"\r\n            pattern=\"[A-Za-z\\s]+\"\r\n            maxLength=\"50\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"expiryDate\">Expiry Date:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"expiryDate\"\r\n            pattern=\"(0[1-9]|1[0-2])\\/[0-9]{2}\"\r\n            maxLength=\"5\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"cvv\">CVV:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"cvv\"\r\n            pattern=\"[0-9]{3,4}\"\r\n            maxLength=\"4\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button onClick={handlePayment}>Pay</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n<Footer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["SwiperCore","Navigation","Pagination","Autoplay","_useState","useState","_useState2","_slicedToArray","rooms","setRooms","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","selectedRoom","setSelectedRoom","_useState9","_useState10","bookingModalOpen","setBookingModalOpen","_useState11","_useState12","checkInDate","setCheckInDate","_useState13","_useState14","checkOutDate","setCheckOutDate","_useState15","roomStatus","_useState17","_useState18","userProfile","setUserProfile","_useState19","_useState20","setUpdatedEmail","_useState21","_useState22","totalPrice","setTotalPrice","_useState23","_useState24","currentSlide","setCurrentSlide","_useState25","_useState26","paymentModalOpen","setPaymentModalOpen","_useState27","_useState28","confirmPriceClicked","setConfirmPriceClicked","swiperRef","useRef","useEffect","fetchRooms","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","roomCollection","roomSnapshot","roomData","headerCarouselImagesCollection","batch","wrap","_context","prev","next","collection","db","getDocs","sent","docs","map","doc","_objectSpread","id","data","writeBatch","forEach","room","headerImage","images","newDocRef","set","image","commit","t0","console","log","stop","apply","arguments","fetchUserProfile","_ref2","_callee2","userDocRef","userDocSnap","_context2","auth","getDoc","exists","email","closeModal","handlePayment","_ref3","_callee3","cardNumber","cardName","expiryDate","cvv","paymentRef","_context3","document","getElementById","value","abrupt","addDoc","timestamp","Date","getTime","test","roomHeaderImages","timeout","setTimeout","current","swiper","slideNext","clearTimeout","_jsxs","className","children","_jsx","Swiper","ref","slidesPerView","navigation","pagination","autoplay","delay","onSlideChange","activeIndex","index","SwiperSlide","concat","src","alt","name","IoIosArrowBack","onClick","prevSlide","length","IoIosArrowForward","Loader","openModal","type","description","price","adults","htmlFor","onChange","e","target","startDate","endDate","isNaN","timeDiff","nights","Math","ceil","disabled","pattern","maxLength","required","Footer"],"sourceRoot":""}